{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","isAlreadyAdded","useState","filmTitle","setFilmTitle","chosenFilm","chooseFilm","err","setErr","useEffect","htmlFor","value","onChange","event","target","type","id","placeholder","onClick","fetch","then","response","json","error","Error","Title","Plot","Poster","imdbID","disabled","Response","active","App","state","data","find","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.894fa7a1.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/api';\n\nexport const FindMovie = ({ addMovie, isAlreadyAdded }) => {\n  const [filmTitle, setFilmTitle] = useState('');\n  const [chosenFilm, chooseFilm] = useState({});\n  const [err, setErr] = useState('');\n\n  useEffect(() => {\n    setErr('');\n  }, [filmTitle]);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={filmTitle}\n              onChange={(event) => {\n                setFilmTitle(event.target.value);\n              }}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${err ? 'is-danger' : ''}`}\n            />\n          </div>\n\n          <p className=\"help is-danger\">\n            {err}\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={\n                () => {\n                  request(filmTitle).then((response) => {\n                    chooseFilm(response.movie);\n                    setErr(response.error);\n                  });\n                }\n              }\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              disabled={\n                chosenFilm.Response === 'False'\n                || isAlreadyAdded(chosenFilm)\n                || !chosenFilm.title\n              }\n              active={false}\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(chosenFilm);\n                setFilmTitle('');\n                chooseFilm({});\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      {\n        !err && chosenFilm.title ? (\n          <div className=\"container\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...chosenFilm} />\n          </div>\n        ) : ''\n      }\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  isAlreadyAdded: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=1aef6206';\n\nexport const request = title => fetch(`${BASE_URL}&t=${title}`)\n  .then(response => response.json())\n  .then((response) => {\n    const result = {\n      error: response.Error,\n      movie: {\n        title: response.Title,\n        description: response.Plot,\n        imgUrl: response.Poster,\n        imdbUrl: `https://www.imdb.com/title/${response.imdbID}/`,\n        imdbId: response.imdbID,\n      },\n    };\n\n    return result;\n  });\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  isAlreadyAdded = movie => (!!this.state.movies.find(\n    ({ imdbId }) => imdbId === movie.imdbId,\n  ))\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            isAlreadyAdded={this.isAlreadyAdded}\n            addMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}